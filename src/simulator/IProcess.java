package simulator;

/**
 * Title:        
 * Description:
 * Copyright:    Copyright (c) 2012
 * Company:      University of Texas at Austin
 * @author R.L. Rockhold, Ph.D.
 * @version 1.0
 */
public interface IProcess {

	/**
	 * Changes the quantum associated with this process.
	 * This change persists until the next setQuantum() call.
	 * When a process is dispatched (IScheduler.schedule()), the
	 * CPU retrieves the quantum from the process.
	 * @param ticks  quantum size
	 */
	void setQuantum(int ticks);
	
	/**
	 * IDs are generated by Simulator.  The first process
	 * is id=0, next is 1.
	 * @return This process' id
	 */
	int getID();
	
	/**
	 * Associates the object o with this Process.
	 * Since only 1 object can be associated with a Process,
	 * this replaces any previously set Object or the default (null).
	 * @param o
	 */
	void setAddressSpace(Object o);
	
	/**
	 * Retrieves the current Object associated with this IProcess.
	 * @return Object, or null.
	 */
	
	Object getAddressSpace();
	
	
	/**
	 * The Simulator gives each process a name.  This name
	 * is the same value found in the configuration file for
	 * property "Processes"
	 * @return this process' name
	 */
	String getName();

	/**
	 * Returns the number of ticks in the current quantum assigned to this process.
	 * Default quantum is 4 ticks.  Use setQuantum(number-of-tics) to change.
	 * When a process is dispatched (IScheduler.schedule()), the
	 * CPU retrieves the quantum from the process.
	 * @return quantum in ticks.
	 */
	int getQuantum();
	
	IProcessState getState();

	/**
	 * 
	 */
	void incrInstrFaults();
	
	/**
	 * 
	 */
	int getTextByteCount();
	
    void completed(int current_time);

    void incrCPUTime(int ticks);

    void started(int current_time);

    boolean isStarted();
    
    void incrDispatches();
    
    int getInstructionCount();

    /**
     * @param trace_ndx
     */
    String getInstruction(int trace_ndx);

    void setStartingDataVaddr(long vaddr);
    /**
     * @return
     */
    long getStartingDataVaddr();
	
}
